p=[1, 2, 3] q=[8, 7, 6] v=[1, 2, 3] w=[1, 0, 1] x=[0, 1, 0] y=[0, 1, 0]
p = [3, 1, 5]
x = [16, 19, 4]
p = [1, 2, 3]
q = [8, 7, 6]
f2 = Frame {
  v0 = [1, 0, 0]
  v1 = [0, 1, 0]
  v2 = [0, 0, 1]
  p = [0, 0, 0]
}
f = Frame {
  v0 = [0, 0, 2]
  v1 = [3, 0, 0]
  v2 = [0, 1, 1]
  p = [5, 4, 3]
}
f[1][0] = 3
f.p()[1] = 4
f.p() = [5, 4, 3]
q = [14, 8, 11]
f2inv = Frame {
  v0 = [0, 0.333333, 0]
  v1 = [-0.5, 0, 1]
  v2 = [0.5, 0, 0]
  p = [0.5, -1.66667, -4]
}
f2*f2 = Frame {
  v0 = [0, 2, 2]
  v1 = [0, 0, 6]
  v2 = [3, 1, 1]
  p = [17, 7, 16]
}
q*inverse(f2) = [2, 3, 4]
ff = Frame {
  v0 = [0, 0, 2]
  v1 = [3, 0, 0]
  v2 = [0, 1, 1]
  p = [5, 4, 3]
}
zero = Frame {
  v0 = [0, 0, 0]
  v1 = [0, 0, 0]
  v2 = [0, 0, 0]
  p = [0, 0, 0]
}
Frame::identity() = Frame {
  v0 = [1, 0, 0]
  v1 = [0, 1, 0]
  v2 = [0, 0, 1]
  p = [0, 0, 0]
}
dot(v1, v2) = 0
dot(v1, v3) = 2
f = Frame {
  v0 = [0, 0, 2]
  v1 = [3, 0, 0]
  v2 = [0, 1, 1]
  p = [5, 4, 3]
}
hf = Matrix<float>(4, 4) {
  0 0 2 0
  3 0 0 0
  0 1 1 0
  5 4 3 1
}
hf = Matrix<float>(4, 4) {
  0 0 2 0
  3 0 0 4
  0 1 1 0
  5 4 3 0
}
p = Array<float>(4) {
  2
  3
  4
  1
}
mat_mul(p, hf.view()) = Array<float>(4) {
  14
  8
  11
  12
}
d = 23
m = 3.74166
vcross = [-9, 9, -3]
origin = [10, 10, 10]
vdeg = 72
dist2(p, q) = 83
dist(p, q) = 9.11043
dist2(p, (p+q)/2.f) = 20.75
dist(p, (p+q)/2.f) = 4.55522
dist(p+(q-p), p) = 9.11043
dist2((p+q)/2.f, (p+q)/2.f) = 0
mag2(p-q) = 83
mag2(p-p) = 0
