rel ?= 1#  0=debug or 1=release (usually 1)
x64 = 1#  32-bit not supported by mingw64

include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_gcc

ifeq ($(plain_compiler),)
   cwarnings += -Wshadow#  on the older gcc compilers (cygwin, mingw32) it gives too many false-positives
endif

# $(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev0/mingw64/bin)


ifneq ($(call file_exists,c:/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin),)

$(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin)
# set path=('c:/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin' $path:q); unhash; which g++
# PATH="/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin:$PATH" which g++

else ifneq ($(call file_exists,c:/Program Files/mingw-w64/x86_64-7.1.0-posix-seh-rt_v5-rev0/mingw64/bin),)

$(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-7.1.0-posix-seh-rt_v5-rev0/mingw64/bin)

else 

$(error Did not find mingw-w64 directory.)

endif


gfx_libs = -lglu32 -lopengl32 -lwinmm -lgdi32 -lcomdlg32 -luser32


## Stack trace on error
# (set path=('/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin' $path:q); gdb --batch -ex run -ex where --args ~/src/bin/mingw/HTest -dividebyzero)

# (set path=('/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin' $path:q); gdb --batch -ex run -ex where --args ~/src/bin/mingw/HTest -accessviolation)
# ...
# Program received signal SIGSEGV, Segmentation fault.
# 0x0000000000540429 in int& hh::details::SHOW_aux<int&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int&, bool) ()
# #0  0x0000000000540429 in int& hh::details::SHOW_aux<int&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int&, bool) ()
# #1  0x0000000000404bf7 in (anonymous namespace)::do_accessviolation() ()
# #2  0x000000000043b7ed in hh::ParseArgs::parse_internal() ()
# #3  0x000000000043bab0 in hh::ParseArgs::parse() ()
# #4  0x0000000000558bac in main ()


## Debugging
# http://stackoverflow.com/questions/5814568/is-there-a-way-to-generate-a-gdb-readable-coredump-when-running-programs-compile
# http://code.google.com/p/backtrace-mingw/source/browse/trunk/backtrace.c  for mingw32


## Misc
# Check 64-bit and 32-bit output by using:
#  dumpbin -headers ../../libNumeric/clapack/blas_mingw.a | head -20
#  dumpbin -headers experiment3.o | head -20
#  dumpbin -headers experiment3.exe | head -20

# default MS Visual C Runtime is version 0x0060 (msvcrt.dll)
# would need >=0x0080 (VC8) for _set_output_format, but better workaround using setenv (see Hh.cpp)
# msvcrt = 0x00A0
# set_msvcrt_version = -D__MSVCRT_VERSION__=$(msvcrt)
# based on __MSVCRT_VERSION__ chosen above (not needed for default 0x060); for debug use -lmsvcr100d?
# last_libs += -lmsvcr100
