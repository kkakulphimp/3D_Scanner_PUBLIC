rel ?= 0#  0=debug or 1=release (to contrast with mingw, I changed this to 0 on 20140429)
x64 = 0#  x64 is not supported by mingw32

# gcc 4.8.1 does not yet support -std=c++14
STD_CXX = -std=c++11

include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_gcc

# $(call prepend_PATH,c:/mingw/bin,)
# set path=(c:/mingw/bin $path:q); unhash; which g++

$(call prepend_PATH,c:/Program Files (x86)/mingw-builds/x32-4.8.1-posix-dwarf-rev5/mingw32/bin)
# set path=('c:/Program Files (x86)/mingw-builds/x32-4.8.1-posix-dwarf-rev5/mingw32/bin' $path:q); unhash; which g++

gfx_libs = -lglu32 -lopengl32 -lwinmm -lgdi32 -lcomdlg32

# http://stackoverflow.com/questions/6716654/segmentation-fault-using-openmp-and-sse
# mingw32 gcc bug: crash in _mm_set_ss() invoked by _mm_load_s() from Vector4(uchar[4]) due to unaligned
#   stack access when using OpenMP.  This compilation parameter overcomes it.
ccommon += -mstackrealign

# (set path=('/Program Files (x86)/mingw-builds/x32-4.8.1-posix-dwarf-rev5/mingw32/bin' $path:q); gdb --batch -ex run -ex where --args ~/src/bin/mingw32/HTest -dividebyzero)
# ...
# Program received signal SIGFPE, Arithmetic exception.
# 0x00401d29 in (anonymous namespace)::do_dividebyzero () at c:/Hh/tfs/.../src/HTest/HTest.cpp:127
# 127 SHOW(3/i);
# #0  0x00401d29 in (anonymous namespace)::do_dividebyzero () at c:/Hh/tfs/.../src/HTest/HTest.cpp:127
# #1  0x0041408c in hh::ParseArgs::parse_internal (this=0x29fc54) at c:/Hh/tfs/.../src/libHh/Args.cpp:357
# #2  0x004141d3 in hh::ParseArgs::parse (this=0x29fc54) at c:/Hh/tfs/.../src/libHh/Args.cpp:372
# #3  0x0040e521 in main (argc=2, argv=0x1532958) at c:/Hh/tfs/.../src/HTest/HTest.cpp:2085
# error return ../../../../src/gdb-7.6/gdb/windows-nat.c:1275 was 5
